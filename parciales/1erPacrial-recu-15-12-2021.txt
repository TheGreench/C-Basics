>> ej 1
/* EJ1
Escribir una función en C que reciba como parámetro dos numeros enteros y devuelva al modulo invocante los siguientes valores:
- la diferencia entre ambos numeros, y
- la cantidad de numeros pares que hay entre estos numeros -excluyendolos del valor calculado-. 

NOTA: Tener en cuenta que los numeros con los que se invoca la funcion pueden estar en cualquier orden.

Por ejemplo: 

-> Si los números con los que se invoca la funcion son 18 y 10

	La función debe devolver al módulo invocante (NO IMPRIMIR), los valores 8 y 3, donde el 8 representa la diferencia y el 3 la cantidad de valores pares excluyendo 10 y 18.

-> El resultado deberia ser similar si la funcion furea invocada con los numeros 10 y 18.

Escribir un programa que invoque dicha funcion y la pruebe con los siguientes valores:
100 y 110
111 y 98

NOTA: invocar la funcion con los numeros en el orden indicado.

*/

>> ej 2
/* EJ2
Implementar la funcion ejercicio_2 que reciba una vector de numeros enteros (maximo 1000) y un máximo logico. La funcion debe devolver la cantidad de números pares que se encuentran en posiciones impares.

Considerar que solo se puede recorrer una vez el vector.

Por ejemplo:

  22,28,44,34,78,33

 - Casos : 2
 */
 
 >> ej 3
 /*
 /* EJ3
Utilizando las declaraciones dadas debajo, implementar la función ejercicio_3 que reciba una matriz cargada con números enteros, que representan las cantidades de mililitros de lluvia por hora de cada dia del mes de noviembre.

La función debe mostrar por pantalla el dia y el acumulado de ese dia, de aquellos dias que superen el promedio diario mensual.

Considerar que solo se puede recorrer una vez la matriz. Está permitido utilizar un vector auxiliar.

Por ejemplo:

Hora ->   0   1   2   ... 22  23      Acumulado x dia

            ------------------------------------------------------ 

Dia 1   |   0   7   5   ... 4   3     ->    51
      2   |   2   6   3   ... 3   2     ->    52
      3   |   0   1   3   ... 2   3     ->    40
       ... |   ... ... ... ... ... ...
     30  |   1   2   6   ... 3   5     ->    45

Promedio diario mensual =   44.2

El resultado a mostrar sería:

    En el dia 1 han caido 51 ml.
    En el dia 2 han caido 52 ml.
    ..(si hay día entre el 2 y el 30 que superen el promedio se mostrarían aquí)
    En el dia 30 han caido 45 ml.

*/

#include <stdio.h>
#define HORAS 24
#define DIAS 30

typedef int matrix_t[DIAS][HORAS];

void ejercicio_3(matrix_t matrix) {

    /* INICIO: INGRESE SU CODIGO ACA */


    /* FIN: FINALICE SU CODIGO ACA */

}

void main()

{

matrix_t matriz1 = {{3,3,0,0,2,5,4,1,1,4,4,5,2,4,2,3,0,2,2,1,1,1,2,5},{1,4,4,4,0,5,1,5,5,1,3,3,0,4,4,0,2,1,4,4,0,1,1,5},{4,2,1,5,3,3,3,0,4,1,3,5,0,4,1,0,3,5,1,3,0,5,5,4},{5,2,1,3,3,2,2,1,3,3,4,2,1,1,3,3,5,2,1,1,5,3,5,2},{2,0,3,2,1,0,1,1,4,2,4,4,0,0,2,3,0,0,2,4,5,2,2,4},{0,0,4,5,3,4,2,1,3,1,4,3,0,4,3,5,5,2,3,2,1,4,4,4},{1,0,4,5,5,0,4,0,4,5,5,4,0,4,0,5,0,0,5,5,1,3,0,0},{1,2,5,4,5,1,0,2,0,0,1,1,4,5,0,1,5,4,5,3,0,3,3,0},{3,1,3,3,1,1,5,0,2,2,3,2,4,4,5,2,0,2,1,3,4,5,1,0},{4,1,4,4,2,1,4,5,1,5,4,1,0,4,0,5,2,2,3,4,5,2,1,4},{3,5,4,5,2,4,3,1,1,5,3,0,3,3,2,0,2,0,0,5,0,1,5,2},{4,1,5,3,3,4,3,4,2,2,1,3,1,1,5,2,3,1,5,3,4,3,2,3},{2,4,5,1,4,4,5,4,0,3,0,2,0,1,4,0,2,2,1,3,0,2,2,5},{3,1,5,3,5,2,0,3,4,3,0,5,1,2,4,5,3,5,5,4,2,4,2,5},{3,3,0,1,4,5,0,4,1,2,3,5,0,0,4,2,0,0,5,4,0,1,5,3},{5,4,5,1,0,5,2,1,2,3,3,4,2,1,5,1,2,5,4,0,2,5,0,0},{4,1,4,0,2,3,1,5,5,3,1,3,0,5,5,5,1,1,4,0,2,2,1,1},{0,4,5,2,2,5,2,2,3,1,0,3,3,0,1,4,4,3,3,2,4,4,0,0},{5,2,2,1,2,5,1,4,0,2,0,4,0,0,5,4,1,1,1,5,0,1,3,1},{3,0,0,5,1,5,0,2,0,3,0,1,2,1,0,2,2,0,1,2,0,2,2,4},{1,3,3,4,0,1,0,1,5,4,4,2,0,0,3,3,4,0,1,1,4,3,4,3},{2,2,4,0,3,5,0,4,5,5,0,3,3,3,1,3,3,1,4,3,3,3,1,2},{1,2,2,2,1,4,0,1,1,5,0,2,3,2,0,5,0,3,0,2,1,5,4,1},{1,5,4,1,2,0,2,5,1,5,1,0,0,0,4,1,2,4,3,1,2,2,4,4},{4,0,2,4,3,4,4,3,5,0,1,2,1,5,2,2,2,1,2,4,4,1,5,3},{4,4,4,2,4,5,0,3,3,3,3,5,2,4,5,1,4,2,4,4,0,5,0,3},{1,4,0,3,0,3,0,3,3,3,1,3,2,2,1,0,3,1,1,3,3,1,2,3},{0,3,0,3,3,3,1,0,0,1,3,2,4,2,2,5,2,1,1,5,0,3,3,4},{1,0,1,5,5,4,3,1,4,4,1,0,2,1,4,0,3,5,0,2,3,0,0,3},{4,4,4,1,5,4,5,3,5,4,4,2,5,2,5,0,1,5,0,1,5,1,4,4}};



matrix_t matriz2 = {{4,4,0,0,4,3,5,3,0,1,3,5,1,1,1,2,1,4,2,3,4,3,3,2},{5,4,1,3,5,2,3,2,5,3,4,2,4,3,3,4,3,0,2,4,5,2,5,0},{3,4,3,5,4,2,5,2,0,0,5,5,2,3,3,0,0,1,1,1,4,3,5,5},{4,2,1,2,5,2,4,5,5,1,2,0,4,1,0,2,1,4,2,1,3,0,2,3},{5,4,4,4,1,3,1,2,0,3,2,0,4,4,2,2,4,2,4,4,0,2,0,3},{4,5,5,1,2,1,3,0,0,3,4,4,0,2,5,4,5,3,2,0,2,2,4,2},{5,1,1,0,0,1,1,4,4,0,3,2,0,0,3,3,4,3,1,3,4,1,0,1},{0,3,0,5,1,0,1,1,0,3,5,0,3,2,3,2,3,5,1,1,5,2,4,5},{3,1,4,1,1,4,3,1,4,4,5,0,0,5,3,3,0,0,0,2,5,5,1,3},{1,5,0,3,5,0,3,4,4,2,5,3,5,4,1,4,1,5,0,2,1,0,3,4},{5,5,1,1,0,5,4,5,2,4,2,3,4,3,5,5,0,2,3,0,0,0,0,1},{3,0,1,3,2,4,0,4,3,1,3,1,5,1,5,2,0,3,1,4,3,5,0,4},{0,0,3,3,4,5,5,0,4,4,3,5,2,0,0,1,3,3,0,2,2,0,3,4},{4,0,1,0,4,3,3,1,2,0,3,4,5,0,0,1,5,5,4,0,5,4,5,1},{2,3,2,0,1,4,5,2,0,0,5,5,4,0,1,4,1,3,1,5,1,4,5,0},{4,1,1,1,3,0,0,0,1,3,3,4,5,5,2,2,0,5,2,4,3,4,0,5},{2,3,1,0,1,3,0,1,4,4,0,5,4,2,4,3,1,0,5,3,2,3,3,0},{0,2,3,1,4,3,3,2,3,4,2,4,1,5,0,0,0,1,5,1,1,1,3,4},{0,0,4,4,0,0,0,4,3,5,0,2,4,2,5,5,4,1,0,5,4,5,0,1},{3,4,3,0,2,1,4,0,1,0,0,5,0,3,3,4,4,2,2,4,2,4,3,4},{0,5,0,5,1,4,4,1,5,3,2,2,3,4,4,5,2,2,0,2,1,2,0,4},{3,3,5,1,2,0,1,5,1,3,5,1,2,2,5,2,0,2,2,3,1,4,3,1},{1,3,1,2,5,0,0,3,1,5,2,1,0,5,3,4,4,5,2,0,5,5,1,3},{2,0,4,3,3,3,1,4,0,0,1,4,1,5,5,1,0,1,1,4,0,5,0,4},{4,1,4,4,0,3,2,4,0,4,2,5,1,3,3,1,4,3,2,0,4,3,3,2},{3,2,2,0,0,4,3,3,0,5,3,4,5,5,5,1,4,5,3,4,1,2,4,3},{2,4,3,1,0,5,3,3,4,0,2,3,1,1,3,5,5,2,3,0,0,1,1,0},{0,3,3,1,3,0,3,2,0,2,4,0,5,4,5,2,1,1,3,4,1,0,4,3},{2,3,0,4,2,2,3,1,1,3,0,4,3,2,2,1,0,4,5,2,1,1,4,5},{5,5,0,2,3,5,4,3,0,0,3,4,5,3,1,0,0,5,3,3,1,4,5,5}};



matrix_t matriz3 = {{0,4,2,5,0,5,3,4,2,4,1,3,0,1,3,5,0,1,2,5,3,5,4,4},{1,1,3,1,0,4,2,0,5,4,4,2,4,3,2,1,4,4,4,5,2,4,0,4},{0,2,2,0,4,4,2,2,1,1,1,1,3,2,2,0,5,2,3,5,5,3,0,4},{2,1,4,5,3,4,5,1,1,4,5,2,0,0,5,1,0,0,0,0,1,3,4,2},{1,3,5,5,0,1,4,2,1,2,3,3,5,1,4,5,0,3,5,3,1,5,5,1},{4,0,4,3,5,3,0,2,2,2,3,0,2,5,3,0,2,4,1,5,2,0,4,2},{2,4,1,5,4,4,5,4,0,5,3,3,0,5,5,4,5,4,2,2,3,2,0,4},{0,5,1,2,1,0,4,4,2,2,3,5,4,4,2,1,0,3,5,3,5,3,4,1},{5,0,0,3,5,4,5,5,5,1,0,0,2,0,3,3,0,3,0,4,5,4,4,0},{4,1,0,1,0,2,4,1,0,2,1,1,1,0,4,0,0,5,4,1,5,4,2,2},{1,2,2,2,2,1,4,4,0,5,4,2,0,1,3,1,2,4,4,2,2,0,4,2},{0,2,2,3,4,3,4,5,4,1,3,0,4,3,5,3,1,2,5,0,1,5,1,0},{5,1,5,4,0,5,3,1,4,3,0,1,5,1,4,1,2,1,4,0,1,2,3,5},{0,5,2,0,3,3,3,3,2,1,5,1,3,0,4,5,5,1,5,4,4,3,1,0},{0,4,1,3,4,3,2,4,0,2,2,1,5,0,1,4,0,3,0,3,1,3,2,4},{5,0,0,2,2,5,3,0,1,0,1,1,2,2,4,5,5,5,3,1,3,5,2,0},{5,5,1,2,1,3,4,5,3,0,1,1,1,2,4,2,1,0,3,0,3,2,1,1},{2,5,4,3,4,1,5,0,0,0,0,0,5,2,0,4,5,1,4,3,0,4,2,5},{2,4,0,0,3,2,3,3,4,2,2,0,1,5,5,0,4,1,3,3,4,3,0,0},{3,2,5,2,1,1,4,0,2,2,4,2,4,4,1,0,5,3,4,0,5,2,0,3},{4,3,2,5,3,0,2,0,2,4,1,2,0,4,2,4,0,5,5,2,2,5,0,1},{3,2,3,1,2,0,5,3,1,1,2,2,5,2,0,5,4,0,1,0,5,3,5,4},{1,1,3,1,1,0,0,2,4,1,1,3,2,2,2,4,5,1,3,4,3,4,0,0},{5,5,1,1,1,0,4,3,4,2,1,3,1,4,1,1,2,3,5,1,3,4,3,1},{2,2,0,2,1,3,4,5,3,5,2,3,2,4,5,1,2,5,3,4,0,4,0,1},{3,2,4,4,4,2,4,5,0,3,0,2,3,5,3,4,1,1,4,1,2,4,3,2},{4,5,0,5,4,1,3,3,0,2,1,5,2,0,0,2,3,5,3,0,0,2,2,5},{5,4,3,4,4,1,3,1,3,4,2,4,1,1,1,0,0,0,4,5,4,5,1,3},{5,0,5,1,0,4,1,5,2,0,0,4,4,2,5,0,0,4,5,1,0,4,0,3},{5,3,5,2,5,4,4,0,0,2,3,0,5,3,5,5,5,1,5,0,3,5,5,2}};

printf("CASO 1 -------------------------\n\n");
ejercicio_3(matriz1);

printf("CASO 2 -------------------------\n\n");
ejercicio_3(matriz2);

printf("CASO 3 -------------------------\n\n");
ejercicio_3(matriz3);

}*/
